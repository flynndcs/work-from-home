{"version":3,"sources":["Navigation.js","ViewModal.js","ProjectItem.js","FeatureItem.js","TaskItem.js","TeamItem.js","EmployeeItem.js","List.js","WorkFromHome.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","activeClassName","exact","to","Component","ViewModal","handleClick","props","toggle","ProjectItem","toggleView","console","log","setState","view","state","toggleEdit","edit","toggleDelete","delete","toggleAddMember","addMember","toggleAddFeature","addFeature","viewUrl","this","projectName","editUrl","deleteUrl","assignUrl","featuresUrl","team","type","FeatureItem","tasksUrl","FeatureName","TaskItem","TeamItem","EmployeeItem","axios","require","List","get","then","response","items","map","item","displayList","ProjectName","Team","defaultProps","WorkFromHome","path","render","value","routeProps","match","params","project","feature","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5aefb981.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Navigation.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Navigation extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"NavContainer\">\r\n\t\t\t\t\t<div className=\"NavItem\">\r\n\t\t\t\t\t\t<NavLink activeClassName=\"Nav-active\" exact to=\"/Projects\">\r\n\t\t\t\t\t\t\tProjects\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"NavItem\">\r\n\t\t\t\t\t\t<NavLink activeClassName=\"Nav-active\" exact to=\"/Teams\">\r\n\t\t\t\t\t\t\tTeams\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"NavItem\">\r\n\t\t\t\t\t\t<NavLink activeClassName=\"Nav-active\" exact to=\"/Employees\">\r\n\t\t\t\t\t\t\tEmployees\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"Nav-title\">\r\n\t\t\t\t\t\t<NavLink activeClassName=\"Nav-active\" exact to=\"/\">\r\n\t\t\t\t\t\t\tWork From Home\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"Nav-divider\" />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Modal.css';\r\n\r\nexport default class ViewModal extends Component {\r\n\thandleClick = () => {\r\n\t\tthis.props.toggle();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"modal\">\r\n\t\t\t\t<div className=\"modal-content\">Viewing project information</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ViewModal from './ViewModal';\r\nimport './List.css';\r\n\r\nexport default class ProjectItem extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tview: false,\r\n\t\t\tedit: false,\r\n\t\t\tdelete: false,\r\n\t\t\taddMember: false,\r\n\t\t\taddFeature: false\r\n\t\t};\r\n\t}\r\n\r\n\ttoggleView = () => {\r\n\t\tconsole.log('Calling toggleView');\r\n\t\tthis.setState({\r\n\t\t\tview: !this.state.view\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleEdit = () => {\r\n\t\tthis.setState({\r\n\t\t\tedit: !this.state.edit\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleDelete = () => {\r\n\t\tthis.setState({\r\n\t\t\tdelete: !this.state.delete\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleAddMember = () => {\r\n\t\tthis.setState({\r\n\t\t\taddMember: !this.state.addMember\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleAddFeature = () => {\r\n\t\tthis.setState({\r\n\t\t\taddFeature: !this.state.addFeature\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst viewUrl = `/Projects/Display/${this.props.projectName}`;\r\n\t\tconst editUrl = `/Projects/Edit/${this.props.projectName}`;\r\n\t\tconst deleteUrl = `/Projects/Delete/${this.props.projectName}`;\r\n\t\tconst assignUrl = `/Projects/AssignTeam/${this.props.projectName}`;\r\n\t\tconst featuresUrl = `/Projects/Features/${this.props.projectName}`;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<li className=\"ListItem\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Project Name:</h2>\r\n\t\t\t\t\t\t{this.props.projectName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>Team:</h3>\r\n\t\t\t\t\t\t{this.props.team}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.state.view ? <ViewModal toggle={this.toggleView} /> : null}\r\n\t\t\t\t\t<Link to={viewUrl}>\r\n\t\t\t\t\t\t<button>Display Details</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to={editUrl}>\r\n\t\t\t\t\t\t<button>Edit</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to={deleteUrl}>\r\n\t\t\t\t\t\t<button>Delete</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to={assignUrl}>\r\n\t\t\t\t\t\t<button>Assign a new team to this project</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to={featuresUrl}>\r\n\t\t\t\t\t\t<button>View features</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<label>Mark this project complete?</label>\r\n\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t</li>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './List.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class FeatureItem extends Component {\r\n\trender() {\r\n\t\tconst tasksUrl = `/Features/${this.props.FeatureName}/Tasks}`;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<li className=\"ListItem\">\r\n\t\t\t\t\t<div>This is a feature item</div>\r\n\t\t\t\t\t<label>Mark as complete?</label>\r\n\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t\t<Link to={tasksUrl}>\r\n\t\t\t\t\t\t<button>Tasks</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './List.css';\r\n\r\nexport default class TaskItem extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<li className=\"ListItem\">\r\n\t\t\t\t\t<div>This is a task item</div>\r\n\t\t\t\t\t<label>Mark as complete?</label>\r\n\t\t\t\t\t<input type=\"checkbox\" />\r\n\t\t\t\t</li>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './List.css';\r\n\r\nexport default class TeamItem extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<li className=\"ListItem\">\r\n\t\t\t\t\t<h2>Team Name:</h2>\r\n\t\t\t\t\t<h3>Team lead:</h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\tHere are some team members:\r\n\t\t\t\t\t\t<li>member1</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<Link to=\"Employees/Add\">\r\n\t\t\t\t\t\t<button>Add an employee</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './List.css';\r\n\r\nexport default class EmployeeItem extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<li className=\"ListItem\">\r\n\t\t\t\t\t<div>Here is an employee</div>\r\n\t\t\t\t\t<div>This is the team they're on</div>\r\n\t\t\t\t\t<div>Maybe a list of the tasks they're currently working on can go in here too</div>\r\n\t\t\t\t\t<button>Edit employee information</button>\r\n\t\t\t\t\t<button>Remove employee</button>\r\n\t\t\t\t</li>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './List.css';\r\nimport ProjectItem from './ProjectItem';\r\nimport FeatureItem from './FeatureItem';\r\nimport TaskItem from './TaskItem';\r\nimport TeamItem from './TeamItem';\r\nimport EmployeeItem from './EmployeeItem';\r\n\r\nconst axios = require('axios');\r\n\r\nexport default class List extends Component {\r\n\tstatic defaultProps = {\r\n\t\tdisplayList: 'Projects', //default display is projects\r\n\t\titems: [\r\n\t\t\t{ ProjectName: 'p1', Team: 't1' },\r\n\t\t\t{ ProjectName: 'p2', Team: 't2' },\r\n\t\t\t{ ProjectName: 'p3', Team: 't3' }\r\n\t\t]\r\n\t};\r\n\r\n\t//use componentDidUpdate to make API calls to get new data on nav click - component only mounts on page load, updates on nav click\r\n\tcomponentDidUpdate() {\r\n        axios.get('/Projects').then(function (response)\r\n            {\r\n                console.log(response);\r\n            });\r\n\t\tconsole.log('Component updated');\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ListContainer\">\r\n\t\t\t\t<ul className=\"List\">\r\n\t\t\t\t\t{this.props.items.map((item) => {\r\n\t\t\t\t\t\tswitch (this.props.displayList) {\r\n\t\t\t\t\t\t\tcase 'Projects':\r\n\t\t\t\t\t\t\t\treturn <ProjectItem projectName={item.ProjectName} team={item.Team} />;\r\n\t\t\t\t\t\t\tcase 'Features':\r\n\t\t\t\t\t\t\t\treturn <FeatureItem />;\r\n\t\t\t\t\t\t\tcase 'Tasks':\r\n\t\t\t\t\t\t\t\treturn <TaskItem />;\r\n\t\t\t\t\t\t\tcase 'Teams':\r\n\t\t\t\t\t\t\t\treturn <TeamItem />;\r\n\t\t\t\t\t\t\tcase 'Employees':\r\n\t\t\t\t\t\t\t\treturn <EmployeeItem />;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\treturn <ProjectItem projectName={item.ProjectName} team={item.Team} />;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Navigation from './Navigation';\r\nimport './WorkFromHome.css';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport List from './List';\r\n\r\nexport default class WorkFromHome extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titems: [\r\n\t\t\t\t{ ProjectName: 'Project1', Team: 'team1' },\r\n\t\t\t\t{ ProjectName: 'Project2', Team: 'team2' },\r\n\t\t\t\t{ ProjectName: 'Project3', Team: 'team3' }\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"WorkFromHome\">\r\n\t\t\t\t<Navigation />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1>Welcome</h1>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tWork From Home is a platform for teams working remotely to coordinate with their\r\n\t\t\t\t\t\t\t\t\tpeers and organize their remote work structure. Use the navbar above to view all\r\n\t\t\t\t\t\t\t\t\tprojects, teams, or employees. Otherwise, you can use the links below to make\r\n\t\t\t\t\t\t\t\t\tsomething new.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<Link exact to=\"/Projects/New\">\r\n\t\t\t\t\t\t\t\t\tStart a new project\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<Link>Build a new team</Link>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<Link>Add a new employee</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/Projects\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Link exact to=\"/Projects/New\">\r\n\t\t\t\t\t\t\t\t\tStart a new project\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t\t<label>Search projects by </label>\r\n\t\t\t\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"ID\">ID</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Description\">Description</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"Team\">Team</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t<input type=\"search\" />\r\n\t\t\t\t\t\t\t\t\t<button>search</button>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t<List displayList=\"Projects\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/Projects/New\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<label>Project name:</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t<label>Description:</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/Teams\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Link exact to=\"/Teams/New\">\r\n\t\t\t\t\t\t\t\t\tBuild a new team\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<List displayList=\"Teams\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/Teams/New\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<label>Team Name:</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t<label>Team lead:</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/Employees\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Link exact to=\"/Employees/New\">\r\n\t\t\t\t\t\t\t\t\tAdd a new employee\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<List displayList=\"Employees\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/Employees/New\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<label>First Name:</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t<label>Last Name:</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/Employees/Add\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t\t<label>Please enter the ID of the employee you want to add to the team:</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t<button>submit</button>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/Projects/Display/:ProjectName\"\r\n\t\t\t\t\t\trender={(routeProps) => (\r\n\t\t\t\t\t\t\t<div>Here we will display project details for {routeProps.match.params.ProjectName}</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/Projects/AssignTeam/:ProjectName\"\r\n\t\t\t\t\t\trender={(routeProps) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>Which team would you like to assign to {routeProps.match.params.ProjectName}? </p>\r\n\t\t\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t\t\t<option value=\"teamName\">A team would go here</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/Projects/Edit/:ProjectName\"\r\n\t\t\t\t\t\trender={(routeProps) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\tHere we can edit the project with name {routeProps.match.params.ProjectName} using a\r\n\t\t\t\t\t\t\t\tform\r\n\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t\t<label>Project name:</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<label>Description:</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<label>Employees:</label>\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t<li>employee 1</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>employee 2</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>employee 3</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<button>Add employee</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t<label>Features:</label>\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t<li>feature 1</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>feature 2</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>feature 3</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<button>Add a new feature</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/Projects/Delete/:ProjectName\"\r\n\t\t\t\t\t\trender={(routeProps) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div>Are you sure you want to delete {routeProps.match.params.ProjectName} ?</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button>Yes</button>\r\n\t\t\t\t\t\t\t\t\t<button>No</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/Projects/Features/:ProjectName\"\r\n\t\t\t\t\t\trender={(routeProps) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tDisplaying features being implemented on project{' '}\r\n\t\t\t\t\t\t\t\t\t{routeProps.match.params.ProjectName}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<List displayList=\"Features\" project={routeProps.match.params.ProjectName} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/Features/:FeatureName/Tasks\"\r\n\t\t\t\t\t\trender={(routeProps) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>Displaying tasks for feature {routeProps.match.params.FeatureName}</p>\r\n\t\t\t\t\t\t\t\t<List displayList=\"Tasks\" feature={routeProps.match.params.FeatureName} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<div />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport WorkFromHome from './WorkFromHome';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<WorkFromHome />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<App />\r\n\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}